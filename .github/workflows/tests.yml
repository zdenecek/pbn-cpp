name: Build and test

on:
  workflow_dispatch:
  push:
    # branches:
    #   - main

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", id: msvc, artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            build_type: "Release",cc: "cl",cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        }
        - { 
            name: "Windows Latest MinGW", id: mingw, artifact: "Windows-MinGW.tar.xz",
            os: windows-latest, 
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest GCC",
            id: gcc, artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++",
          }
        - {
            name: "macOS Latest Clang", artifact: "macOS.tar.xz",
            os: macos-latest,
            id: mac,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.23.x'
      - name: Run platform specific setup
        shell: cmake -P {0}
        run: |
            if ("${{ runner.os }}" STREQUAL "Windows" AND NOT "x${{ matrix.config.environment_script }}" STREQUAL "x")
            execute_process(
              COMMAND "${{ matrix.config.environment_script }}" && set
              OUTPUT_FILE environment_script_output.txt
            )
            file(STRINGS environment_script_output.txt output_lines)
            foreach(line IN LISTS output_lines)
              if (line MATCHES "^([a-zA-Z0-9_-]+)=(.*)$")
                set(ENV{${CMAKE_MATCH_1}} "${CMAKE_MATCH_2}")
              endif()
            endforeach()
            endif()
      - name: Install Boost
        if: ${{ matrix.config.id == 'gcc' }}
        run: |
            sudo apt-get update
            sudo apt-get install libboost-all-dev -y
      - name: Install Boost
        if: ${{ matrix.config.id == 'mac' }}
        run: |
           brew update 
           brew install boost           
      - name: Install Boost
        id: boost
        if: ${{ matrix.config.id == 'msvc'  || matrix.config.id == 'mingw'}}
        uses: egor-tensin/build-boost@v1
        with:
          version: 1.71.0
          libraries: filesystem program_options system
          platform: x64
          toolset: ${{ matrix.config.id }}
          configuration: Release
      - name: CMake Configure
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
      - name: CMake Build
        run: cmake --build build --config ${{ matrix.config.build_type }} --target test
      - name: Test
        run: |
          cd build
          ./pbn_test