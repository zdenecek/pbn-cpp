#include "PbnInfoPrinter.h"
#include "Tags.h"

#include <algorithm>

namespace manipulators
{

    void PbnInfoPrinter::printOverview(std::string filename, const PbnFile &file, std::ostream &out)
    {
        out << "File: " << filename << "\n";
        out << "Boards: ";
        if (file.getBoards().empty())
            out << "None\n";
        else
            out
                << file.getBoards()[0].getBoardNumber()
                << " - "
                << file.getBoards().back().getBoardNumber()
                << " (" << file.getBoards().size() << " boards)"
                << "\n";

        out << "Analyses: No"
            << "\n";

        auto generator = GetGeneratorInfo(file);
        if (!generator.empty())
            out << "Generated by: " << generator << "\n";
    }

    std::string PbnInfoPrinter::GetGeneratorInfo(const PbnFile &file)
    {
        auto f = std::find_if(file.getTokens().begin(), file.getTokens().end(), [](const std::shared_ptr<tokens::SemanticPbnToken> &token)
                              { return token->isTag() && std::static_pointer_cast<tokens::Tag>(token)->getTagname() == "Generator"; });

        if (f == file.getTokens().end())
            return "";

        return std::static_pointer_cast<tokens::Tag>(*f)->getContent();
    }
}